import com.mariomanzano.nasaexplorer.buildsrc.Libs

apply plugin: "com.github.ben-manes.versions"

buildscript {
    ext {
        compose_version = Libs.AndroidX.Compose.version
    }
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
        classpath Libs.AndroidX.Navigation.gradlePlugin
        classpath Libs.Hilt.gradlePlugin
        classpath Libs.gradleVersionsPlugin
    }
}

// Taken from https://github.com/ben-manes/gradle-versions-plugin
def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return ""
    }
}